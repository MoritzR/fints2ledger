name: CI

on:
  pull_request:
    types: [synchronize, opened, reopened]
  push:
    branches: [master]
  # schedule:
  #   # additionally run once per week (At 00:00 on Sunday) to maintain cache
  #   - cron: '0 0 * * 0'

jobs:
  build:
    name: GHC ${{ matrix.ghc-version }} on ${{ matrix.os }} / build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        ghc-version: ['9.10', '9.8', '9.4']

        include:
          - os: windows-latest
            ghc-version: '9.8'
          - os: macos-latest
            ghc-version: '9.8'

    steps:
    - uses: actions/checkout@v4

    - name: Set up GHC ${{ matrix.ghc-version }}
      id: setup
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc-version }}

    - name: Configure the build
      run: |
        cabal configure --enable-tests --enable-benchmarks --disable-documentation
        cabal build all --dry-run
      # The last step generates dist-newstyle/cache/plan.json for the cache key.

    - name: Restore cached dependencies
      uses: actions/cache/restore@v4
      id: cache
      env:
        key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
      with:
        path: ${{ steps.setup.outputs.cabal-store }}
        key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
        restore-keys: ${{ env.key }}-

    - name: Install dependencies
      # If we had an exact cache hit, the dependencies will be up to date.
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cabal build --only-dependencies

    # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
    - name: Save cached dependencies
      uses: actions/cache/save@v4
      # If we had an exact cache hit, trying to save the cache would error because of key clash.
      if: steps.cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.setup.outputs.cabal-store }}
        key: ${{ steps.cache.outputs.cache-primary-key }}

    - name: Build
      run: |
        cabal build

    - name: Test
      run: |
        cabal test

    - name: Check cabal file
      run: cabal check
